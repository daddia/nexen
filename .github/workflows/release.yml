name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
          cache-dependency-path: |
            'go.work.sum'
            '**/go.sum'

      - name: Run tests
        run: |
          go work sync
          go test -v ./...

  build-and-publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
          cache-dependency-path: |
            'go.work.sum'
            '**/go.sum'

      - name: Build all services
        run: |
          go work sync
          mkdir -p artifacts
          for dir in services/*; do
            if [ -f "$dir/go.mod" ]; then
              service_name=$(basename "$dir")
              echo "Building $service_name..."
              (cd "$dir" && go build -o "../../artifacts/$service_name")
            fi
          done

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Find all services
        id: find-services
        run: |
          echo "services=$(ls -d services/* | grep -v cmd | xargs -n1 basename | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Build and push Docker images
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          services="${{ steps.find-services.outputs.services }}"
          
          for service in $services; do
            if [ -f "services/$service/Dockerfile" ]; then
              echo "Building and pushing $service..."
              docker build -t ghcr.io/${{ github.repository }}/$service:${{ github.ref_name }} \
                          -t ghcr.io/${{ github.repository }}/$service:latest \
                          -f services/$service/Dockerfile .
              docker push ghcr.io/${{ github.repository }}/$service:${{ github.ref_name }}
              docker push ghcr.io/${{ github.repository }}/$service:latest
            fi
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: service-binaries
          path: artifacts/

      - name: Generate changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{steps.github_release.outputs.changelog}}
          files: artifacts/*
          draft: false
          prerelease: false
